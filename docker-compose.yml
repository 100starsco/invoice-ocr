version: '3.8'

services:
  api:
    build:
      context: ./packages/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/invoice_db
      - MONGODB_URI=mongodb://mongodb:27017/ocr_results
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - invoice-net

  web:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    networks:
      - invoice-net

  ocr-service:
    build:
      context: ./services/ocr-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/ocr_results
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - invoice-net

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=invoice_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - invoice-net

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - invoice-net

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - invoice-net

networks:
  invoice-net:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data:
  redis-data: